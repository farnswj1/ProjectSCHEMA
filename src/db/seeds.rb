# Project name: Project SCHEMA
# Description: This project aims to simplify the enrollment and management processes by
#              reducing the clutter and only showing the essentials of a successful
#              enrollment program.
# Filename: seeds.rb
# Description: This files seeds the database with many records.
# Last modified on: 11/24/19

# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)

#Administrators (1 administrator)
User.create(first_name: 'Justin', last_name: "Farnsworth", email: 'farnswj1@tcnj.edu', password: 'justin1997', is_admin: true)

#Professors (6 professors)
User.create(first_name: 'Bobby', last_name: 'Tables',     email: 'tablesb1@tcnj.edu', password: 'professor123', is_professor: true)
User.create(first_name: 'John',   last_name: "Smith",     email: 'smithj1@tcnj.edu',  password: 'professor123', is_professor: true)
User.create(first_name: 'Emma',   last_name: 'Jones',     email: 'jonese1@tcnj.edu',  password: 'professor123', is_professor: true)
User.create(first_name: 'Maya',   last_name: 'Rudolph',   email: 'rudolpm1@tcnj.edu', password: 'professor123', is_professor: true)
User.create(first_name: 'Mikey',  last_name: 'Bloodgood', email: 'bloodgm1@tcnj.edu', password: 'professor123', is_professor: true)
User.create(first_name: 'Ethan',    last_name: 'Zeigler', email: 'zeiglee1@tcnj.edu', password: 'professor123', is_professor: true)

#Students (Users and their Student Profiles) (30 users, 25 student accounts)
#NOTE: The last User entry intentionally will not be given a reference to another Student record!)
User.create(first_name: 'Timmy',   last_name: 'Tables',            email: 'tablest1@tcnj.edu', password: 'student123')
User.create(first_name: 'Thomas',  last_name: 'Gilman',            email: 'gilmant1@tcnj.edu', password: 'student123')
User.create(first_name: 'Nick',    last_name: 'Suriano',           email: 'suriann1@tcnj.edu', password: 'student123')
User.create(first_name: 'Diana',   last_name: 'Morales',           email: 'morales1@tcnj.edu', password: 'student123')
User.create(first_name: 'Bryce',   last_name: 'Harper',            email: 'harperb1@tcnj.edu', password: 'student123')
User.create(first_name: 'Tom',     last_name: 'Brady',             email: 'bradyt1@tcnj.edu',  password: 'student123')
User.create(first_name: 'Emily',   last_name: 'Sullivan',          email: 'sullive1@tcnj.edu', password: 'student123')
User.create(first_name: 'Anna',    last_name: 'Estevez',           email: 'estevea1@tcnj.edu', password: 'student123')
User.create(first_name: "JuJu",    last_name: 'Smith-Schuster',    email: 'smithsj1@tcnj.edu', password: 'student123')
User.create(first_name: "Ariana",  last_name: 'Grande',            email: 'grandea1@tcnj.edu', password: 'student123')
User.create(first_name: "Jack",    last_name: 'Del Rio',           email: 'delrioj1@tcnj.edu', password: 'student123')
User.create(first_name: "Michael", last_name: "O'Malley",          email: 'omallem1@tcnj.edu', password: 'student123')
User.create(first_name: "Michael", last_name: "Scott",             email: 'scottm1@tcnj.edu',  password: 'student123')
User.create(first_name: "Candice", last_name: "McKinnon",          email: 'mckinnc1@tcnj.edu', password: 'student123')
User.create(first_name: "Ellen",   last_name: "Adams",             email: 'adamse1@tcnj.edu',  password: 'student123')
User.create(first_name: "Jason",   last_name: "Burkhardt",         email: 'burkhaj1@tcnj.edu', password: 'student123')
User.create(first_name: "Shannon", last_name: "O'Riley",           email: 'orileys1@tcnj.edu', password: 'student123')
User.create(first_name: "Daniel",  last_name: "Freeman",           email: 'freemad1@tcnj.edu', password: 'student123')
User.create(first_name: "Morgan",  last_name: "Freeman",           email: 'freemam1@tcnj.edu', password: 'student123')
User.create(first_name: "Tammy",   last_name: "Valentinetti",      email: 'valentt1@tcnj.edu', password: 'student123')
User.create(first_name: "Jordan",  last_name: "Vasquez-Rodriguez", email: 'vasquej1@tcnj.edu', password: 'student123')
User.create(first_name: "Tyler",   last_name: "Davis",             email: 'davist1@tcnj.edu',  password: 'student123')
User.create(first_name: "Bryan",   last_name: "McNeal",            email: 'mcnealb1@tcnj.edu', password: 'student123')
User.create(first_name: "Amanda",  last_name: "Anderson",          email: 'andersa1@tcnj.edu', password: 'student123')
User.create(first_name: "Skyler",  last_name: "Thompson",          email: 'thompss1@tcnj.edu', password: 'student123')
User.create(first_name: "Ferris",   last_name: "Bueller",          email: 'buellef1@tcnj.edu', password: 'student123')
User.create(first_name: "Brandi",  last_name: "Turner",            email: 'turnerb1@tcnj.edu', password: 'student123')
User.create(first_name: "Tyler",   last_name: "Nunez",             email: 'nunezt1@tcnj.edu',  password: 'student123')
User.create(first_name: "DJ",      last_name: "Ferrari",           email: 'ferrard1@tcnj.edu', password: 'student123')
User.create(first_name: "Michael", last_name: "Daniels",           email: 'danielm1@tcnj.edu', password: 'student123')


student01 = Student.create(user_id: 8,  major: 'Computer Science')
student02 = Student.create(user_id: 9,  major: 'Business Administration')
student03 = Student.create(user_id: 10, major: 'Economics')
student04 = Student.create(user_id: 11, major: 'Mathematics')
student05 = Student.create(user_id: 12, major: 'Health & Exercise Science')
student06 = Student.create(user_id: 13, major: "Women's, Gender, & Sexuality Studies")
student07 = Student.create(user_id: 14, major: 'Computer Science')
student08 = Student.create(user_id: 15, major: 'Criminology')
student09 = Student.create(user_id: 16, major: 'Computer Science')
student10 = Student.create(user_id: 17, major: 'Electrical Engineering')
student11 = Student.create(user_id: 18, major: 'Physics')
student12 = Student.create(user_id: 19, major: 'Mathematics')
student13 = Student.create(user_id: 20, major: 'Computer Science')
student14 = Student.create(user_id: 21, major: 'Biomedical Engineering')
student15 = Student.create(user_id: 22, major: 'American Sign Language')
student16 = Student.create(user_id: 23, major: 'Mathematics')
student17 = Student.create(user_id: 24, major: 'Biology')
student18 = Student.create(user_id: 25, major: 'Computer Engineering')
student19 = Student.create(user_id: 26, major: 'Computer Science')
student20 = Student.create(user_id: 27, major: 'Electrical Engineering')
student21 = Student.create(user_id: 28, major: 'Computer Science')
student22 = Student.create(user_id: 29, major: 'Political Science')
student23 = Student.create(user_id: 30, major: 'Biomedical Engineering')
student24 = Student.create(user_id: 31, major: 'Economics')
student25 = Student.create(user_id: 32, major: 'Computer Science')

#Saves student reference to User records (for non-admins and non-professors)
i = 1
User.where(id: 8..32).each do |user|
    user.update_attribute(:student_id, i)
    i = i + 1
end

#Courses (12 entries)
csc220_01 = Course.create(course_id: 'CSC220-01', course_title: 'Computational Problem Solving',           user_id: 2, minimum_seats: 6, maximum_seats: 10, description: 'Students will learn the basics of computer science.')
csc220_02 = Course.create(course_id: 'CSC220-02', course_title: 'Computational Problem Solving',           user_id: 2, minimum_seats: 6, maximum_seats: 10, description: 'Students will learn the basics of computer science.')
csc230_01 = Course.create(course_id: 'CSC230-01', course_title: 'Data Structures',                         user_id: 5, minimum_seats: 6, maximum_seats: 10, description: 'Students will learn various data structures.')
csc270_01 = Course.create(course_id: 'CSC270-01', course_title: 'Discrete Structures',                     user_id: 6, minimum_seats: 6, maximum_seats: 10, description: 'Students will learn about discrete structures, including finite state machines.')
csc315_01 = Course.create(course_id: 'CSC315-01', course_title: 'Database Systems',                        user_id: 3, minimum_seats: 5, maximum_seats: 11, description: 'Students will learn about database management systems.')
csc325_01 = Course.create(course_id: 'CSC325-01', course_title: 'Computer Architecture',                   user_id: 3, minimum_seats: 5, maximum_seats: 8, description: 'Students will learn about computer architecture.')
csc345_01 = Course.create(course_id: 'CSC345-01', course_title: 'Operating Systems',                       user_id: 7, minimum_seats: 5, maximum_seats: 10, description: 'Students will learn everything about operating systems.')
csc380_01 = Course.create(course_id: 'CSC380-01', course_title: 'Artificial Intelligence',                 user_id: 2, minimum_seats: 4, maximum_seats: 11, description: 'Students will learn about AIs.')
csc415_01 = Course.create(course_id: 'CSC415-01', course_title: 'Software Engineering',                    user_id: 6, minimum_seats:  5, maximum_seats: 10, description: 'Students will learn how to develop quality software.')
csc415_02 = Course.create(course_id: 'CSC415-02', course_title: 'Software Engineering',                    user_id: 6, minimum_seats:  5, maximum_seats: 10, description: 'Students will learn how to develop quality software.')
csc445_01 = Course.create(course_id: 'CSC445-01', course_title: 'Theory of Computation',                   user_id: 7, minimum_seats:  6, maximum_seats: 12, description: 'Students will learn computational techniques.')
csc498_01 = Course.create(course_id: 'CSC498-01', course_title: 'Mentored Research I in Computer Science', user_id: 7, minimum_seats:  1, maximum_seats: 5, description: 'Students will conduct research under supervision of the instructor.')

#Enrollment Data (37 entries)
EnrolledCourse.create(student: student01, course: csc345_01)
EnrolledCourse.create(student: student01, course: csc380_01)
EnrolledCourse.create(student: student02, course: csc220_01)
EnrolledCourse.create(student: student02, course: csc230_01)
EnrolledCourse.create(student: student02, course: csc270_01)
EnrolledCourse.create(student: student03, course: csc445_01)
EnrolledCourse.create(student: student03, course: csc498_01)
EnrolledCourse.create(student: student05, course: csc415_01)
EnrolledCourse.create(student: student05, course: csc498_01)
EnrolledCourse.create(student: student06, course: csc415_01)
EnrolledCourse.create(student: student06, course: csc315_01)
EnrolledCourse.create(student: student08, course: csc220_02)
EnrolledCourse.create(student: student08, course: csc230_01)
EnrolledCourse.create(student: student09, course: csc230_01)
EnrolledCourse.create(student: student09, course: csc270_01)
EnrolledCourse.create(student: student10, course: csc315_01)
EnrolledCourse.create(student: student12, course: csc315_01)
EnrolledCourse.create(student: student12, course: csc325_01)
EnrolledCourse.create(student: student12, course: csc345_01)
EnrolledCourse.create(student: student13, course: csc230_01)
EnrolledCourse.create(student: student14, course: csc498_01)
EnrolledCourse.create(student: student15, course: csc220_01)
EnrolledCourse.create(student: student15, course: csc230_01)
EnrolledCourse.create(student: student16, course: csc315_01)
EnrolledCourse.create(student: student16, course: csc415_01)
EnrolledCourse.create(student: student16, course: csc445_01)
EnrolledCourse.create(student: student17, course: csc220_01)
EnrolledCourse.create(student: student17, course: csc230_01)
EnrolledCourse.create(student: student17, course: csc270_01)
EnrolledCourse.create(student: student19, course: csc415_01)
EnrolledCourse.create(student: student19, course: csc498_01)
EnrolledCourse.create(student: student20, course: csc345_01)
EnrolledCourse.create(student: student21, course: csc380_01)
EnrolledCourse.create(student: student23, course: csc445_01)
EnrolledCourse.create(student: student24, course: csc498_01)
EnrolledCourse.create(student: student25, course: csc315_01)
EnrolledCourse.create(student: student25, course: csc325_01)


#Waitlist Entries (27 entries)
Waitlist.create(student: student01, course: csc415_01)
Waitlist.create(student: student01, course: csc498_01)
Waitlist.create(student: student03, course: csc315_01)
Waitlist.create(student: student03, course: csc325_01)
Waitlist.create(student: student04, course: csc270_01)
Waitlist.create(student: student04, course: csc345_01)
Waitlist.create(student: student05, course: csc445_01)
Waitlist.create(student: student07, course: csc230_01)
Waitlist.create(student: student07, course: csc270_01)
Waitlist.create(student: student08, course: csc270_01)
Waitlist.create(student: student10, course: csc325_01)
Waitlist.create(student: student10, course: csc380_01)
Waitlist.create(student: student11, course: csc380_01)
Waitlist.create(student: student13, course: csc270_01)
Waitlist.create(student: student18, course: csc315_01)
Waitlist.create(student: student18, course: csc345_01)
Waitlist.create(student: student19, course: csc345_01)
Waitlist.create(student: student20, course: csc315_01)
Waitlist.create(student: student20, course: csc325_01)
Waitlist.create(student: student21, course: csc415_01)
Waitlist.create(student: student21, course: csc498_01)
Waitlist.create(student: student22, course: csc270_01)
Waitlist.create(student: student23, course: csc498_01)
Waitlist.create(student: student24, course: csc380_01)
Waitlist.create(student: student24, course: csc415_01)
Waitlist.create(student: student25, course: csc345_01)
Waitlist.create(student: student25, course: csc445_01)